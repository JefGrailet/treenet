About ARTest (treenet_artest) - By Jean-François Grailet, December 2, 2015
==========================================================================

Compilation
===========

You will need gcc and g++ on your Linux distribution to compile the Alias 
resolution assessment version of TreeNET (treenet_artest). To compile it, set 
Release/ as your working directory and execute the command:

make

If you need to recompile TreeNET after some editing, type the following 
commands:

make clean
make

Deployement on PlanetLab testbed
================================

If you intent to use TreeNET "ARTest" on PlanetLab testbed, here is some 
advice.

* Do not bother with compiling ARTest on PlanetLab nodes and rather compile 
  it on your own computer. Then, you can upload the executable file (found in 
  Release/) on a PlanetLab node and uses it as soon as you connect to it.

* Of course, your executable should be compiled with an environement similar 
  to that of the PlanetLab nodes. The oldest OS you should find on a PlanetLab 
  node is usually Fedora 8 (at the time this file was written). A safe (but 
  slow) method to compile ARTest for Fedora 8 and onwards is to run Fedora 8 
  as a virtual machine, put the sources on it, compile ARTest and retrieve 
  the executable file.

Usage
=====

N.B.: some options are the same as they were in ExploreNET v2.1. Therefore, 
their description is the same as can be found on the following page:

Source: http://nsrg.louisiana.edu/project/ntmaps/output/explorenet.html

Whenever an option did not change since ExploreNET v2.1, it is signaled.

./treenet_artest

The options are:

* -i (verbose: --input-file)
  Option to provide a string giving one or several paths to input files 
  containing alias lists. Input files should only consist list of IPs 
  separated with blanks (= router supposed to be true) which are themselves 
  separated with line breaks (\n).
  
* -e (verbose: --interface) (from ExploreNET v2.1)
  Interface name through which probing/response packets exit/enter (default is 
  the first non-loopback IPv4 interface in the active interface list). Use 
  this option if your machine has multiple network interface cards and you opt 
  for one interface over the others.

* -u (verbose: --probing-protocol) (from ExploreNET v2.1)
  Probing protocol [icmp|udp|tcp] (default is icmp). Note that routers are 
  more responsive to ICMP probing.

* -m (verbose: --attention-message)
  Option to edit the message carried by the probes, typically "NOT AN ATTACK".

* -c (verbose: --concurrency-nb-threads)
  Option to edit the amount of threads used while probing (during inference as 
  well as during refinement) or computing traceroutes/alias resolution hints. 
  Default is 256.

* -r (verbose: --resolve-host-names) (from ExploreNET v2.1)
  Use reverse DNS to resolve host names and show them along with subnet IP 
  addresses [true|false] (default is false). If an IP address has an 
  associated name it is shown in parentheses next to the IP address, otherwise 
  an empty parentheses is shown.

* -f (verbose: --fix-flow-id) (from ExploreNET v2.1)
  Use stable flow ID whenever possible [true|false] (default is true). Takes 
  advantage of fixed flow ID against load balancers as in paris-traceroute 
  whenever the destination address does not change.

* -s (verbose: --third-opinion-prescan)
  Perform a third opinion pre-scanning phase [true|false] (default is false). 
  By default, TreeNET performs always two pre-scanning rounds, with a larger 
  timeout value for the second round, in order to maximize the amount of 
  responsive IPs. With this option activated, unresponsive IPs are probed 
  again with 4 times the initial timeout. Note that this should noticeably 
  extend the overall execution time with a large amount of unresponsive IPs.

* -w (verbose: --probe-timeout-period) (from ExploreNET v2.1)
  Maximum milliseconds amount to wait for a probe reply (default is 2500). If 
  you think that the RTT to the destination is more than the default value 
  then increase it.

* -z (verbose: --probe-regulating-period) (from ExploreNET v2.1)
  Minimum milliseconds amount to wait between two immediately consecutive 
  probes (default is 50). Useful when routers apply rate limiting.

* -d (verbose: --probe-thread-delay)
  Minimum milliseconds amount to wait between two immediately consecutive 
  threads (default is 250). This delay is meant to avoid sending too many 
  probes at the same time (for example, upon starting subnet inference) which 
  could potentially cause congestion with a large amount of threads.

* -a (verbose: --amount-ip-ids)
  Alias resolution: amount of IP-IDs to be collected for each IP involved in 
  an alias resolution phase (default is 4). Having more or less IP-IDs affects 
  the accuracy of the velocity estimation or the viability of Ally. TreeNET 
  limits the possible values for this parameter in [3, 20].

* -r (verbose: --max-rollovers)
  Alias resolution: maximum amount of IP-ID counter rollover which to consider 
  when using the velocity technique (default is 50). A low value for this 
  parameter can induce a large amount of IPs having an "infinite" velocity, 
  while a great value can lead to unrealistic results. TreeNET limits the 
  possible values for this parameter in [1, 256].

* -t (verbose: --base-tolerance)
  Alias resolution: tolerance value used to extend a velocity range when 
  checking if two velocity ranges overlap while using the velocity alias 
  resolution technique (default is 0.3). As it is rather common to see ranges 
  being very close while never overlapping, this tolerance value helps to 
  associate them.

* -x (verbose: --max-error)
  Alias resolution: maximum error to be tolerated while rounding the amount of 
  counter rollovers of each IP-ID interval while using the velocity alias 
  resolution technique (default i 0.35). As these values are computed as real 
  values (because having an integer value for each is extremely rare), they 
  are rounded afterwards. They are only kept as solutions if the difference 
  with the closest integer is lower than this parameter.

* -o (verbose: --output-file)
  Option to choose the name of the output file. By default, the name of the 
  output file (always generated) is dd-mm-yyyy hh:mm:ss.

* -g (verbose: --debug) (from ExploreNET v2.1)
  Shows debug information during the subnet inference (with the mechanisms 
  from ExploreNET).

* -v (verbose: --version)
  Shows program version.

* -? (verbose: --help)
  Prints out all options of the program along its version.

Other remarks
=============

* Most machines forbid the user to open sockets to send probes, which prevents 
  ARTest from doing anything. To overcome this, run TreeNET "ARTest" as a 
  super user (for example, with sudo).

* Most of the actual code of TreeNET "ARTest" is found in src/toolbase/. 
  src/prober/ and src/common/ provides libraries to handle (ICMP, UDP, TCP) 
  probes, IPv4 addresses, etc.
  
* Also, while the coding style is homogeneous in src/toolbase/, it has not 
  been entirely revisited in src/prober/ and src/common/.
  
* If you want to obtain all the details displayed in console while TreeNET 
  "ARTest" is running, it is recommended to redirect the standard output to a 
  file, like this:
  
  ... > Output_file
  
  Note that the file might get quite big for a large amount of alias lists 
  (several Megaoctets to dozens of Megaoctets).

Contact
=======

TreeNET "ARTest" is a derivated version of TreeNET v2.0 solely built to assess 
the efficiency of its IP-ID-based alias resolution techniques. It was written 
by Jean-François Grailet, currently Ph. D. student at the University of Liège 
(Belgium) in the Research Unit in Networking (RUN), using the sources of 
ExploreNET v2.1 as a basis.

E-mail address: Jean-Francois.Grailet@ulg.ac.be

ExploreNET v2.1 has been elaborated and written by Dr. Mehmet Engin Tozal, 
currently assistant teacher at the University of Louisiana at Lafayette (USA).
The sources of this program can be downloaded at the following address:

http://nsrg.louisiana.edu/project/ntmaps/output/explorenet.html
